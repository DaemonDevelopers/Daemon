sudo: required

language:
  - cpp

os:
  - linux
  - osx

cache: ccache

compiler:
  - gcc
  - clang

#Prepare dependency installation
before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get -qq update
    fi

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get -y -q --no-install-recommends install
        zlib1g-dev libncursesw5-dev libgeoip-dev
        nettle-dev libgmp-dev libcurl4-gnutls-dev libsdl2-dev
        libogg-dev libvorbis-dev libopusfile-dev libtheora-dev
        libwebp-dev libjpeg8-dev libpng-dev
        libfreetype6-dev libglew-dev libopenal-dev
        liblua5.2-dev;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get -y -q --no-install-recommends install ninja-build
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew install ninja
    fi
  - |
    # workarounds to make ccache work
    if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "clang++" ]; then
      sudo ln -s $(which ccache) /usr/lib/ccache/clang
      sudo ln -s $(which ccache) /usr/lib/ccache/clang++
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew install ccache
      export PATH="/usr/local/opt/ccache/libexec:$PATH"
    fi

before_script:
  - ccache --zero-stats
  - mkdir -p build && cd build
  # In older versions of gcc the missing field initializer warning fires even when the initialization list is empty, which is stupid.
  # This issue is fixed in version 5 of gcc, so if we get a newer version on Travis the warning can be re-enabled.
  - if [ "$CC" == "gcc" ]; then export CXXFLAGS="$CXXFLAGS -Wno-missing-field-initializers"; fi
  - export CXXFLAGS="$CXXFLAGS -D__extern_always_inline=inline"

script:
  - cmake -DUSE_WERROR=1 -DBE_VERBOSE=1 -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DUSE_DEBUG_OPTIMIZE=0 ..
  - cmake --build . -- -j8

before_cache:
  - ccache --show-stats

notifications:
  irc:
    - "irc.freenode.org#daemon-engine"
  on_success: change
  on_failure: always

branches:
  except:
    - debian
